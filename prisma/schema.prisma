generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Member {
  id            Int     @id @default(autoincrement())
  name          String
  email         String  @unique
  phone_number  String
  profile_image String?
  department    String?
  college_name  String
  year_of_study Int?
  location      String
  attendance    Int     @default(0)

  // Relations
  teamId Int?
  team   Team? @relation("TeamMembersRelation", fields: [teamId], references: [id])

  // One member can lead multiple teams
  leadsTeams Team[] @relation("TeamLeaderRelation")
}

model Team {
  id                  Int               @id @default(autoincrement())
  scc_id              String?
  scc_password        String?
  title               String
  ps_id               Int
  problem_statement   ProblemStatement @relation(fields: [ps_id], references: [id])
  gallery_images      String[]          // PostgreSQL array

  // Leader relation (one member can lead multiple teams)
  leaderId Int?
  leader   Member? @relation("TeamLeaderRelation", fields: [leaderId], references: [id])

  // Team members
  team_members Member[] @relation("TeamMembersRelation")

  // Tasks
  tasks Task[]
}

model ProblemStatement {
  id          Int    @id @default(autoincrement())
  psId        String
  title       String
  description String
  category    String
  tags        String[]   // PostgreSQL array

  Team Team[]
}

model Task {
  id          Int      @id @default(autoincrement())
  title       String
  description String?
  difficulty  String? // "easy", "medium", "hard"
  round_num   Int
  points      Int      @default(0)
  completed   Boolean  @default(false)
  in_review   Boolean  @default(false)
  timestamp   DateTime @default(now())

  // Relation
  teamId Int
  team   Team @relation(fields: [teamId], references: [id])
}

model Admin {
  id       Int    @id @default(autoincrement())
  email    String @unique
  password String
}
